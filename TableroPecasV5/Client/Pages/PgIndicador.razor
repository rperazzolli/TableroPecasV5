@page "/DetalleIndicador/{Codigo:int}"
@using System.Threading.Tasks;
@using TableroPecasV5.Shared;
@using TableroPecasV5.Client.Componentes 
@inherits TableroPecasV5.Client.Logicas.CLogicaIndicador
@inject IJSRuntime JSRuntime

<div id="BASE_INDICADOR" style="background-color: #f8f9fa; overflow: auto; position: relative; width: 100%; height: calc(100vh - 0px);"
     ondragover="event.preventDefault();" @ondrop="RecibirDrop">
  <CascadingValue Value="this">
  <div class="HHorizontal" style="background-color: #40568d;">
    <p style="margin: 2px 0px 2px 25px; color: white; font-size: 12px; text-align: center;">@NombreIndicador</p>
  </div>

  <div id="RelojPropio" class="ui-widget-content"
       style=@EstiloReloj>
    <b>@NombreIndicador</b>
    <br />
    @Unidades
    <p />
    @if (Contenedores.CContenedorDatos.SiempreTendencia)
    {
      <div class="Centrada" style="width: 350px; height: 180px;">
        <TableroPecasV5.Client.Componentes.CTendRed @ref="ComponenteTendRed" Indicador="@Indicador" />
      </div>
    }
    else
    {
      <div class="Centrada" style="width: 110px; height: 60px;">
        <TableroPecasV5.Client.Componentes.CReloj @ref="ComponenteReloj" Indicador="@Indicador" />
      </div>
    }
    <br />
    @Valor()
    <p />

    @if (HayAlarmaReducida)
    {
      <div class="Centrada" style="background: white; display: inline; float: none; text-align: center; margin-top: 10px;">
        <img class="Img20" src="Imagenes/Detalle.png" @onclick="@CrearFiltroDatosAsync"/>
        <button class="Boton20">
          <img src="Imagenes/Comentario.png" />
        </button>
      </div>
    }

    @if (ComponenteReloj != null && ComponenteReloj.Alarmas != null && ComponenteReloj.Alarmas.Count > 0)
    {
      <div class="Centrada" style="background: white; display: inline; float: none; text-align: center; margin-top: 10px;">
        @if (SinTendencia == "enabled")
        {
        <button class="Boton20" @onclick="@CrearTendencias">
          <img src="Imagenes/Tendencia.png" class="Img20" />
        </button>
        }
        @if (HayTendencias)
        {
          <button class="Boton20 @SinTendencia" @onclick="@CrearFiltroDatosAsync">
            <img src="Imagenes/Detalle.png" />
          </button>
        }
        <button class="Boton20">
          <img src="Imagenes/Comentario.png" />
        </button>
      </div>
    }
    @if (AguardandoReloj)
    {
      <div style="@EstiloAguardando">
      </div>
      <div style="@EstiloDetalleAguardando">
        <i class="fa fa-spinner fa-pulse"></i>
        <p>@TextoAguardando</p>
      </div>
    }
  </div>

    @if (HayTendencias && NivelTendencias < 8)
    {
      <div id="TendenciaUnica" class="ui-widget-content"
           style="@EstiloTendencias">
          <TableroPecasV5.Client.Componentes.CComponenteTendencias @ref="ComponenteTendencias" NivelFlotante="@NivelTendencias"
                                                                   Ancho="@AnchoTendencia" Alto="@AltoTendencia"
                                                                   Ampliado="@TendenciasAmpliadas"
                                                                   PosicionPuntoSeleccionado="@PosicionPuntoTendencia"
                                                                   Abscisa="@AbscisaTendencia" Ordenada="@OrdenadaTendencia"
                                                                   Indicador="@Indicador" CodigoUnico="@Codigo"
                                                                   Alarmas="@ComponenteReloj.Alarmas"/>
      </div>
    }

    @if (HayFiltroDatos)
    {
      @if (ComponenteFiltros != null && ComponenteFiltros.Links != null)
      {
        foreach (Logicas.CLinkFiltros Link in ComponenteFiltros.Links)
        {
          if (Link.PosicionEnPantalla >= 0)
          {
            <div id="@IdFiltro(Link)" class="ui-widget-content"
                 style="@EstiloFiltro(Link)" draggable="true" @ondragstart="@(() => IniciarDragFiltro(Link))">
              <TableroPecasV5.Client.Componentes.FiltroTextos @ref="Link.Componente" NivelFlotante="@Link.NivelFlotante"
                                                              Ancho="@Link.Ancho" Alto="@AltoFiltro" Abscisa="@Link.Abscisa"
                                                              Ordenada="@Link.Ordenada"
                                                              CodigoUnico="@Link.PosicionUnica"
                                                              Link="@Link"/>
            </div>
          }
        }
      }

      @if (ComponenteFiltros != null && ComponenteFiltros.Graficos != null)
      {
        foreach (Logicas.CLinkGrafico Grafico in ComponenteFiltros.Graficos)
        {
          <div id="@IdGrafico(Grafico.CodigoUnico)" class="ui-widget-content" draggable="true"
               style="@EstiloGrafico(Grafico)" @ondragstart="@(() => IniciarDragGrafico(Grafico))">
            @if (Grafico.Clase == ClaseGrafico.BarrasH)
            {
              <TableroPecasV5.Client.Componentes.CGrafico @ref="@Grafico.Componente"
                                                          @key="@Grafico.CodigoUnico"
                                                          Abscisa="@Grafico.Abscisa"
                                                          Ordenada="@Grafico.Ordenada"
                                                          Ancho="@Grafico.Ancho" Alto="@Grafico.Alto"
                                                          CodigoUnico="@Grafico.CodigoUnico"
                                                          Clase="@Grafico.Clase"
                                                          ColumnaAbscisas="@Grafico.ColumnaAbscisas"
                                                          ColumnaOrdenadas="@Grafico.ColumnaOrdenadas"
                                                          ColumnaSexo="@Grafico.ColumnaSexo"
                                                          ValoresSeleccionados="@Grafico.ValoresSeleccionados"
                                                          GraficosDependientes="@Grafico.GraficosDependientes"
                                                          Detallado="@Grafico.Detallado"
                                                          Ampliado="@Grafico.Ampliado"
                                                          NivelFlotante="@Grafico.NivelFlotante" />
            }
            else
            {
              <TableroPecasV5.Client.Componentes.CGrafico @ref="@Grafico.Componente"
                                                          @key="@Grafico.CodigoUnico"
                                                          Abscisa="@Grafico.Abscisa"
                                                          Ordenada="@Grafico.Ordenada"
                                                          Ancho="@Grafico.Ancho" Alto="@Grafico.Alto"
                                                          CodigoUnico="@Grafico.CodigoUnico"
                                                          Clase="@Grafico.Clase"
                                                          ColumnaAbscisas="@Grafico.ColumnaAbscisas"
                                                          ColumnaOrdenadas="@Grafico.ColumnaOrdenadas"
                                                          Ampliado="@Grafico.Ampliado"
                                                          ValoresSeleccionados="@Grafico.ValoresSeleccionados"
                                                          GraficosDependientes="@Grafico.GraficosDependientes" />
            }
          </div>
        }
      }

      @if (Grilla != null)
      {
        <div id="DivGrilla" class="ui-widget-content" draggable="true" @ondragstart="@(() => IniciarDragGrilla(Grilla))"
             style="@EstiloGrilla">
          <TableroPecasV5.Client.Componentes.CGrillaDatos @ref="Grilla.Componente" NivelFlotante="@Grilla.NivelFlotante"
                                                          Ancho="@Grilla.Ancho" Alto="@Grilla.Alto"
                                                          Abscisa="@Grilla.Abscisa" Ordenada="@Grilla.Ordenada"
                                                          @key="@Grilla.PosicionUnica"/>
        </div>

      }

      <div id="ContenedorFiltrosUnico" class="ui-widget-content"
           style="@EstiloContenedorFiltros">
        <TableroPecasV5.Client.Componentes.CContenedorFiltros @ref="ComponenteFiltros" NivelFlotante="@NivelFiltros"
                                                              Ancho="270" Alto="@AltoContenedor"
                                                              @key="@Codigo"
                                                              Indicador="@Indicador" CodigoUnico="@Codigo" />
        @if (AguardandoFiltros)
        {
          <div style="@EstiloAguardando">
          </div>
          <div style="@EstiloDetalleAguardando">
            <i class="fa fa-spinner fa-pulse"></i>
            <p>@TextoAguardando</p>
          </div>
        }
      </div>
  }


    @if (HayTendencias && NivelTendencias == 8)
    {
      <div id="TendenciaUnica" class="ui-widget-content"
           style="@EstiloTendencias">
          <TableroPecasV5.Client.Componentes.CComponenteTendencias @ref="ComponenteTendencias" NivelFlotante="@NivelTendencias"
                                                                   Ancho="@AnchoTendencia" Alto="@AltoTendencia"
                                                                   Ampliado="@TendenciasAmpliadas"
                                                                   PosicionPuntoSeleccionado="@PosicionPuntoTendencia"
                                                                   Abscisa="@AbscisaTendencia" Ordenada="@OrdenadaTendencia"
                                                                   Indicador="@Indicador" CodigoUnico="@Codigo"
                                                                   Alarmas="@ComponenteReloj.Alarmas"/>
      </div>
    }

    </CascadingValue>

</div>

      @functions {
        //public async void FncPonerDesplazables()
        //{
        //  await JSRuntime.InvokeAsync<Int32>("FuncionesJS.FncPonerDesplazables", null);
        //}

      [JSInvokable]
      public static Task<int[]> ReturnArrayAsync()
      {
        return Task.FromResult(new int[] { 1, 2, 3 });
      }

      }

