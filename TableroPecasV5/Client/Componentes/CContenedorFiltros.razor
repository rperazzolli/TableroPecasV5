@using Microsoft.JSInterop
@using TableroPecasV5.Shared
@inherits TableroPecasV5.Client.Logicas.CLogicaContenedorFiltros

<div style="height: 25px;">
  <img style="@EstiloImagen" @onclick="@AbrirGrafico" src="Imagenes/Torta.PNG" />
  <img style="@EstiloImagen" @onclick="@AbrirGrilla" src="Imagenes/FiltroGrilla.PNG" />
</div>

@*<div style="height: 25px;">
  <img style="@EstiloImagen" @onclick="@AbrirGISPinsLL" src="Imagenes/PinsLL.png" />
  <img style="@EstiloImagen" @onclick="@AbrirTortasLL" src="Imagenes/TortasLL.png" />
  <img style="@EstiloImagen" @onclick="@AbrirTortasManual" src="Imagenes/TortasManual.png" />
  <img style="@EstiloImagen" @onclick="@AbrirTortasCapa" src="Imagenes/TortasCapa.png" />
  <img style="@EstiloImagen" @onclick="@AbrirGISWSS" src="Imagenes/GISWSS.png" />
</div>*@

<div style="@EstiloLista">

  @if (Columnas != null)
  {
    <CascadingValue Value="this">
      @if (Lineas != null)
      {
        @foreach (Logicas.LineaFiltro Linea in Lineas)
        {
          <TableroPecasV5.Client.Componentes.CLineaFiltro Linea="@Linea" />
        }
      }
    </CascadingValue>
  }
</div>


<Modal @ref="ModalCrearGrafico" Style="position: fixed; z-index: 99999999;" Closing="@Cerrando">
  <ModalBackdrop />
  <ModalContent IsCentered="true">
    <ModalHeader>
      <ModalTitle>Agregar un gráfico</ModalTitle>
    </ModalHeader>
    <ModalBody>
      <Field>
        <FieldLabel>Gráfico seleccionado: @GraficoSeleccionado</FieldLabel>
        <br />
        <RadioGroup TValue="int" @bind-CheckedValue="@ClaseGraficoElegido" Buttons="true">
          <Radio TValue="int" Value="@((int)ClaseGrafico.Torta)">Tortas</Radio>
          <Radio TValue="int" Value="@((int)ClaseGrafico.Barras)">Barras</Radio>
          <Radio TValue="int" Value="@((int)ClaseGrafico.Histograma)">Histograma</Radio>
          <Radio TValue="int" Value="@((int)ClaseGrafico.BarrasH)">Barras apiladas</Radio>
          <Radio TValue="int" Value="@((int)ClaseGrafico.Puntos)">Puntos</Radio>
        </RadioGroup>
      </Field>
      @if (Proveedor != null && Proveedor.Columnas != null)
      {
        <Field>
          <FieldLabel>Campo de valores</FieldLabel>
          <Select TValue="int" @bind-SelectedValue="@OrdenColumnaValor">
            <SelectItem Value="-1">No corresponde</SelectItem>
            @foreach (Datos.CColumnaBase Columna in Proveedor.Columnas)
            {
              @if (CumpleCondicionReal(Columna.Clase))
              {
                <SelectItem Value="@Columna.Orden">@Columna.Nombre</SelectItem>
              }
            }
          </Select>
        </Field>
        @if (!EsHistograma)
        {
          <Field>
            <FieldLabel>Campo agrupador</FieldLabel>
            <Select TValue="int" @bind-SelectedValue="@OrdenColumnaAbscisa">
              <SelectItem Value="-1">No corresponde</SelectItem>
              @foreach (Datos.CColumnaBase Columna in Proveedor.Columnas)
              {
                @if (CumpleCondicionReal(Columna.Clase))
                {
                  <SelectItem Value="@Columna.Orden">@Columna.Nombre</SelectItem>
                }
              }
            </Select>
          </Field>
        }
        @if (EsBarrasApiladas)
        {
          <Field>
            <FieldLabel>Segundo campo agrupador</FieldLabel>
            <Select TValue="int" @bind-SelectedValue="@OrdenColumnaSexo">
              <SelectItem Value="-1">No corresponde</SelectItem>
              @foreach (Datos.CColumnaBase Columna in Proveedor.Columnas)
              {
                <SelectItem Value="@Columna.Orden">@Columna.Nombre</SelectItem>
              }
            </Select>
          </Field>
        }
      }
    </ModalBody>
    <ModalFooter Style="display: inline-block;">
      <Button Color="Color.Secondary" Clicked="@CerrarVentanaGrafico" Style="width: 50px;">Cerrar</Button>
      @if (Proveedor != null && Proveedor.Columnas != null)
      {
        <Button Color="@ColorBoton(1)" Style="@EstiloBoton(1, 75)" Clicked="@(e => AgregarGrafico(1))">Acumulado</Button>
        <Button Color="@ColorBoton(2)" Style="@EstiloBoton(2)" Clicked="@(e => AgregarGrafico(2))">Media</Button>
        <Button Color="@ColorBoton(3)" Style="@EstiloBoton(3, 75)" Clicked="@(e => AgregarGrafico(3))">@OpcionCantidad</Button>
        <Button Color="@ColorBoton(4)" Style="@EstiloBoton(4)" Clicked="@(e => AgregarGrafico(4))">Mínimo</Button>
        <Button Color="@ColorBoton(5)" Style="@EstiloBoton(5)" Clicked="@(e => AgregarGrafico(5))">Máximo</Button>
      }
    </ModalFooter>
  </ModalContent>
</Modal>

<Modal @ref="ModalPinsLL" Closing="@Cerrando">
  <ModalBackdrop />
  <ModalContent IsCentered="true">
    <ModalHeader>
      <ModalTitle>Agregar pines sobre GIS</ModalTitle>
    </ModalHeader>
    <ModalBody>
      @if (Proveedor != null && Proveedor.Columnas != null)
      {
        <Field>
          <FieldLabel>Columna con datos</FieldLabel>
          <Select TValue="int" @bind-SelectedValue="@OrdenValor">
            <SelectItem Value="-1">No corresponde</SelectItem>
            @foreach (Datos.CColumnaBase Columna in Proveedor.Columnas)
            {
              <SelectItem Value="@Columna.Orden">@Columna.Nombre</SelectItem>
            }
          </Select>
        </Field>
        @if (!CapaPins)
        {
          <Field>
            <FieldLabel>Columna agrupadora</FieldLabel>
            <Select TValue="int" @bind-SelectedValue="@OrdenAgrupador">
              <SelectItem Value="-1">No corresponde</SelectItem>
              @foreach (Datos.CColumnaBase Columna in Proveedor.Columnas)
              {
                if (Columna.Clase != ClaseVariable.Real)
                {
                  <SelectItem Value="@Columna.Orden">@Columna.Nombre</SelectItem>
                }
              }
            </Select>
          </Field>
        }
      <Field>
        <FieldLabel>Columna con latitud</FieldLabel>
        <Select TValue="int" @bind-SelectedValue="@OrdenLat">
          <SelectItem Value="-1">No corresponde</SelectItem>
          @foreach (Datos.CColumnaBase Columna in Proveedor.Columnas)
          {
            if (Columna.Clase == ClaseVariable.Real)
            {
              <SelectItem Value="@Columna.Orden">@Columna.Nombre</SelectItem>
            }
          }
        </Select>
      </Field>
      <Field>
        <FieldLabel>Columna con longitud</FieldLabel>
        <Select TValue="int" @bind-SelectedValue="@OrdenLng">
          <SelectItem Value="-1">No corresponde</SelectItem>
          @foreach (Datos.CColumnaBase Columna in Proveedor.Columnas)
          {
            if (Columna.Clase == ClaseVariable.Real)
            {
              <SelectItem Value="@Columna.Orden">@Columna.Nombre</SelectItem>
            }
          }
        </Select>
      </Field>
      @if (CapaPins)
      {
        <Field>
          <FieldLabel>Agrupa pines cercanos</FieldLabel>
          <Check TValue="bool" @bind-Checked="@Agrupados" />
        </Field>
      }
    }
    </ModalBody>
    <ModalFooter Style="display: inline-block;">
      <Button Color="Color.Secondary" Clicked="@CerrarVentanaGrafico" Style="width: 50px;">Cerrar</Button>
      @if (Proveedor != null && Proveedor.Columnas != null)
      {
        <Button Color="Color.Primary" Style="width: 75px;" Disabled="@NoHayPinsLL" Clicked="@AgregarPinsLL">Graficar</Button>
      }
    </ModalFooter>
  </ModalContent>
</Modal>

<Modal @ref="ModalTortasGIS" Closing="@Cerrando">
  <ModalBackdrop />
  <ModalContent IsCentered="true">
    <ModalHeader>
      <ModalTitle>Agregar tortas sobre GIS</ModalTitle>
    </ModalHeader>
    <ModalBody>
      @if (Proveedor != null && Proveedor.Columnas != null)
      {
        <Field>
          <FieldLabel>Columna posicionadora</FieldLabel>
          <Select TValue="int" @bind-SelectedValue="@OrdenPosicionador">
            <SelectItem Value="-1">No corresponde</SelectItem>
            @foreach (Datos.CColumnaBase Columna in Proveedor.Columnas)
            {
              if (Columna.Clase != ClaseVariable.Real)
              {
              <SelectItem Value="@Columna.Orden">@Columna.Nombre</SelectItem>
              }
            }
          </Select>
        </Field>
        <Field>
          <FieldLabel>Columna de valores</FieldLabel>
          <Select TValue="int" @bind-SelectedValue="@OrdenValor">
            <SelectItem Value="-1">No corresponde</SelectItem>
            @foreach (Datos.CColumnaBase Columna in Proveedor.Columnas)
            {
              if (Columna.Clase == ClaseVariable.Real || Columna.Clase==ClaseVariable.Entero)
              {
                <SelectItem Value="@Columna.Orden">@Columna.Nombre</SelectItem>
              }
            }
          </Select>
        </Field>
        <Field>
          <FieldLabel>Columna agrupadora</FieldLabel>
          <Select TValue="int" @bind-SelectedValue="@OrdenAgrupador">
            <SelectItem Value="-1">No corresponde</SelectItem>
            @foreach (Datos.CColumnaBase Columna in Proveedor.Columnas)
            {
              if (Columna.Clase != ClaseVariable.Real)
              {
                <SelectItem Value="@Columna.Orden">@Columna.Nombre</SelectItem>
              }
            }
          </Select>
        </Field>
      }
    </ModalBody>
    <ModalFooter Style="display: inline-block;">
      <Button Color="Color.Secondary" Clicked="@CerrarVentanaGrafico" Style="width: 50px;">Cerrar</Button>
      @if (Proveedor != null && Proveedor.Columnas != null)
      {
        <Button Color="Color.Primary" Style="width: 75px;" Disabled="@NoHayTortasGIS" Clicked="@AgregarTortasGIS">Graficar</Button>
      }
    </ModalFooter>
  </ModalContent>
</Modal>

